name: Deploy to ECR and ECS
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      # - name: Register a new task definition in ECS
      #   id: task-def
      #   run: |
      #     # Replace the image URL in the task definition file
      #     sed -e "s|<IMAGE_URI>|${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest|" ecs-task-definition.json > new-task-definition.json
      #     # Register the new task definition with ECS
      #     aws ecs register-task-definition \
      #       --cli-input-json file://new-task-definition.json \
      #       --family ${{ secrets.ECS_TASK_FAMILY }}

      # - name: Update ECS service to use the new task definition
      #   run: |
      #     aws ecs update-service \
      #       --cluster ${{ secrets.ECS_CLUSTER }} \
      #       --service ${{ secrets.ECS_SERVICE }} \
      #       --force-new-deployment \
      #       --task-definition ${{ steps.task-def.outputs.taskDefinitionArn }}
